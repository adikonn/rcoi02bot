from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from database.repository import user_repository
import logging

logger = logging.getLogger(__name__)
router = Router()


@router.message(Command("help"))
async def help_command(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
/reregister - –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ
/get_result - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

üîî **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**
–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –Ω–∏—Ö.

‚ùì **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.
    """
    await message.answer(help_text, parse_mode="Markdown")


@router.message(Command("profile"))
async def profile_command(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    user = await user_repository.get_user_by_id(message.from_user.id)

    if not user:
        await message.answer(
            "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return

    profile_text = f"""
üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:**

**–§–∞–º–∏–ª–∏—è:** {user.family}
**–ò–º—è:** {user.name}
**–û—Ç—á–µ—Å—Ç–≤–æ:** {user.father}
**–°–µ—Ä–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:** {user.number}
**–ö–ª–∞—Å—Å:** {user.class_}

–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reregister
    """
    await message.answer(profile_text, parse_mode="Markdown")
